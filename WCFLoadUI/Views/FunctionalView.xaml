<Window x:Class="WCFLoadUI.Views.FunctionalView"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      mc:Ignorable="d" 
      d:DesignHeight="300" d:DesignWidth="300"
      Title="{Binding WindowTitle}"
      Width="1300" Height="800"
      WindowStartupLocation="CenterScreen"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:cal="http://www.caliburnproject.org"
        xmlns:uc="clr-namespace:WCFLoadUI.UserControls"
        xmlns:ts="clr-namespace:WCFLoadUI.TemplateSelectors"
        xmlns:converters="clr-namespace:WCFLoadUI.Converters"
        ResizeMode="NoResize">
    <Window.Resources>
        <converters:BooleanVisibilityValueConverter x:Key="BoolToVisible" />
        <converters:TestConverter x:Key="Test" />
        <DataTemplate x:Key="PrimitiveTemplate">
            <uc:PrimitiveControlView DataContext="{Binding Path=PControlView,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
        </DataTemplate>
        <DataTemplate x:Key="ComplexTemplate">
            <uc:ComplexControlView DataContext="{Binding Path=CControlView,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
        </DataTemplate>
        <DataTemplate x:Key="ListTemplate">
            <uc:ListControlView DataContext="{Binding Path=LControlView,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
        </DataTemplate>
        <DataTemplate x:Key="DictionaryTemplate">
            <uc:DictionaryControlView DataContext="{Binding Path=DControlView,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
        </DataTemplate>
    </Window.Resources>
    <Grid>
        <!--<Rectangle Fill="#FFF4F4F5" HorizontalAlignment="Left" Height="64" Margin="565,707,0,0" Stroke="Black" VerticalAlignment="Top" Width="290"/>-->
        <Rectangle Visibility="{Binding IsValueGridPopulated, Converter={StaticResource BoolToVisible}}" Fill="#FFF4F4F5" 
                   HorizontalAlignment="Left" Height="84" Margin="595,660,0,12" Stroke="Black" VerticalAlignment="Top" Width="290"/>
        <TextBlock Visibility="{Binding IsValueGridPopulated, Converter={StaticResource BoolToVisible}}" 
                   HorizontalAlignment="Left" Margin="603,670,0,12" VerticalAlignment="Top" Width="250" Text="Special Values"/>

        <TextBlock Text="Functional Test" FontSize="18" />
        <ComboBox Width="262" Margin="0,38,0,0" Height="40" HorizontalAlignment="Left" VerticalAlignment="Top"
                  ItemsSource="{Binding ServiceUrlList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                  SelectedItem="{Binding ServiceUrlSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                  >
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectionChanged">
                    <cal:ActionMessage MethodName="ServiceChanged" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </ComboBox>
        <ListView x:Name="ServiceMethodsList" 
                  SelectedItem="{Binding DoubleClickSelectedMethodName, Mode=TwoWay}"
                  ItemsSource="{Binding ServiceMethods}" 
                  Width="262" HorizontalAlignment="Left" Margin="0,80,0,0" BorderThickness="1,1,1,1"
                 >
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseDoubleClick">
                    <cal:ActionMessage MethodName="MethodSelected"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </ListView>


        <DataGrid 
            AutoGenerateColumns="False" 
            CanUserAddRows="False"
            Width="800"  
            Height="355"
            Margin="267,38,0,365" 
            HorizontalAlignment="Left"
            SelectedItem="{Binding SelectedControlViewBindingObject, Mode=TwoWay}"
            ScrollViewer.CanContentScroll="False"
            ScrollViewer.VerticalScrollBarVisibility="Auto"
            ScrollViewer.HorizontalScrollBarVisibility="Auto"
            ItemsSource="{Binding ControlViewBindingObject, Converter={StaticResource Test}}">
            <DataGrid.Columns>
                <DataGridTemplateColumn >
                    <DataGridTemplateColumn.CellTemplateSelector>
                        <ts:TypeTemplateSelector
                            PrimitiveTemplate="{StaticResource PrimitiveTemplate}"
                            ComplexTemplate="{StaticResource ComplexTemplate}" 
                            ListTemplate="{StaticResource ListTemplate}"
                            DictionaryTemplate="{StaticResource DictionaryTemplate}"/>
                    </DataGridTemplateColumn.CellTemplateSelector>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
        <RichTextBox Margin="269,440,217,120" IsReadOnly="True">
            <FlowDocument>
                <Paragraph>
                    <Run Text="{Binding Path=MethodOutput}" />
                </Paragraph>
            </FlowDocument>
        </RichTextBox>
        <ListView x:Name="FunctionalTestList" 
                  SelectedItem="{Binding DoubleClickSelectedMethodValueName, Mode=TwoWay}"
                  ItemsSource="{Binding FunctionalTestCases, Mode=TwoWay}" 
                  Width="197" HorizontalAlignment="Right" Margin="0,48,10,70" BorderThickness="1,1,1,1"
                 >
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseDoubleClick">
                    <cal:ActionMessage MethodName="ValueSelected"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </ListView>

        <Grid Width="197" HorizontalAlignment="Right" VerticalAlignment="Center" Height="54" Margin="0,707,10,11">
            <DockPanel VerticalAlignment="Top" Margin="0,10,0,0">
                <Button Visibility="Hidden" x:Name="SaveFuncTest" Width="190" Height="38"
                    RenderTransformOrigin="0.46,-6.2" Content="Save Functional Test"/>
            </DockPanel>
        </Grid>

        <Button x:Name="SaveValues" Width="90" Height="45" IsEnabled="{Binding IsValueGridPopulated}"
                    HorizontalAlignment="Right" VerticalAlignment="Bottom" DockPanel.Dock="Right" Margin="0,0,900,20" RenderTransformOrigin="0.46,-6.2" Content="Save Values"/>
        <Button x:Name="ResetValues" Width="90" Height="45" IsEnabled="{Binding IsValueGridPopulated}"
        	HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,800,20" RenderTransformOrigin="0.46,-6.2" Content="Reset Values"/>
        <Button x:Name="DeleteValues" IsEnabled="{Binding CanDisplayDeleteValues}" Width="90" Height="45"
        	HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,700,20" RenderTransformOrigin="0.46,-6.2" Content="Delete Values"/>
        <ComboBox SelectedItem="{Binding SelectedSpecialValue, Mode=TwoWay}" ItemsSource="{Binding SpecialValueList}" IsEnabled="{Binding IsValueGridPopulated}"
                  Margin="603,705,545,25" RenderTransformOrigin="0.46,-6.2"/>
        <Button x:Name="AddSelectedValue" Width="90" Height="45" IsEnabled="{Binding IsValueGridPopulated}"
        	HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="30,0,420,25" RenderTransformOrigin="0.46,-6.2" Content="Copy Value" ToolTip="Copy value and click on grid cell to paste"/>

        <TextBlock HorizontalAlignment="Left" Margin="269,413,0,0" TextWrapping="Wrap" Text="Output" VerticalAlignment="Top" FontSize="16"/>
        <Button x:Name="ShowOutput" Content="Show Output" HorizontalAlignment="Left" Margin="992,412,0,0" VerticalAlignment="Top" Width="75" RenderTransformOrigin="0.507,1.455"/>
    </Grid>
</Window>
